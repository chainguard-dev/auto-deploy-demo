name: Deploy New Release

on:
  push:
    branches: [main]
    paths:
      - 'helm/redis/values.yaml'
  workflow_dispatch:

env:
  REDIS_IMAGE_NAME: "cgr.dev/cgr-demo.com/redis-server-bitnami"

jobs:
  deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      actions: read
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      contents: read
      packages: write      
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Setup Go environment
        uses: actions/setup-go@v5.1.0
        with:
          cache: false
      
      - name: Install Cosign
        uses: sigstore/cosign-installer@dc72c7d5c4d10cd6bcb8cf6e3fd625a9e5e537da # v3.7.0
      
      - uses: chainguard-dev/setup-chainctl@v0.2.4
        with:
          identity: "4cf15780a13a9b6576d8b357e6524554c8c12a18/a662f56b58103354"
        
      - name: 'Auth to Registry'
        run: |
          chainctl auth configure-docker
    
      - uses: azure/setup-helm@fe7b79cd5ee1e45176fcad797de68ecaf3ca4814 # v4.2.0
        id: install

      - name: Extract unique image.tag value
        id: extract_unique_tag
        run: |
          CURRENT_UNIQUE_IMAGE=$(yq '.image.tag' helm/redis/values.yaml)
          echo "Extracted Unique Tags: $CURRENT_UNIQUE_IMAGE"
          echo "CURRENT_UNIQUE_TAG=$CURRENT_UNIQUE_IMAGE" >> $GITHUB_ENV
      
      - name: Setup image full ref env var
        id: setup_full_image_ref
        run: |
          REDIS_IMAGE_FULL_REF="${{ env.REDIS_IMAGE_NAME }}:${{ env.CURRENT_UNIQUE_TAG }}"
          echo "REDIS_IMAGE_FULL_REF=$REDIS_IMAGE_FULL_REF" >> $GITHUB_ENV
  
      - name: 'Verify Redis Image Signature && pre-pull image'
        run: |
          cosign verify \
              --certificate-oidc-issuer=https://token.actions.githubusercontent.com \
              --certificate-identity=https://github.com/chainguard-images/images-private/.github/workflows/release.yaml@refs/heads/main \
              ${{ env.REDIS_IMAGE_FULL_REF }} | jq        
          docker pull ${{ env.REDIS_IMAGE_FULL_REF }}
      
      - name: Add Bitnami Helm repository
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo update
  
      - name: Create k8s Kind Cluster
        uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3 # v1.12.0
        with:
          cluster_name: kind-smoke-test
  
      - name: Check if image is available in kind cluster
        run: |
          kind load docker-image ${{ env.REDIS_IMAGE_FULL_REF }} --name kind-smoke-test
          echo "Image loaded into Kind cluster"
  
      - name: Deploy Redis Image using Helm
        run: |
          helm install release-redis bitnami/redis \
            --set global.security.allowInsecureImages=true \
            --values helm/redis/values.yaml \
            --namespace default --create-namespace
  
      - name: Verify Redis Successful Deployment
        run: |
          kubectl get all -n default
          kubectl rollout status deployment.apps/release-redis-master --timeout=120s
          kubectl get all -n default
  
      - name: Delete Kind Cluster
        if: always()
        run: |
          kind delete cluster --name kind-smoke-test
